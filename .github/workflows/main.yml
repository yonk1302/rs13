name: CI

on:
  push:
  workflow_dispatch:

jobs:
  setup:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up PowerShell script
      run: |
        # Enable Remote Desktop
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        $password = '${{ secrets.RUNNER_ADMIN_PASSWORD }}'  # Ensure secret is properly referenced
        if (Get-LocalUser -Name "runneradmin" -ErrorAction SilentlyContinue) {
            Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $password -Force)
        } else {
            New-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $password -Force) -UserMayNotChangePassword -PasswordNeverExpires -AccountNeverExpires
            Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"
        }
        #Create a folder under the drive root
        mkdir actions-runner; cd actions-runner
        # Download the latest runner package
        Invoke-WebRequest -Uri https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-win-x64-2.317.0.zip -OutFile actions-runner-win-x64-2.317.0.zip
        # Optional: Validate the hash
        if((Get-FileHash -Path actions-runner-win-x64-2.317.0.zip -Algorithm SHA256).Hash.ToUpper() -ne 'a74dcd1612476eaf4b11c15b3db5a43a4f459c1d3c1807f8148aeb9530d69826'.ToUpper()){ throw 'Computed checksum did not match' }
        # Extract the installer
        Add-Type -AssemblyName System.IO.Compression.FileSystem ; [System.IO.Compression.ZipFile]::ExtractToDirectory("$PWD/actions-runner-win-x64-2.317.0.zip", "$PWD")
        # Create the runner and start the configuration experience
        ./config.cmd --url https://github.com/yonk1302/rs13 --token ${{ secrets.RUNNER_TOKEN }}
        # Run it!
        ./run.cmd       
