name: CI

on:
  push:
  workflow_dispatch:

jobs:
  setup:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up PowerShell script
      run: |
        # Download ngrok
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile ngrok.zip
        Expand-Archive -Path ngrok.zip -DestinationPath ./

        # Authenticate with ngrok
        $Env:NGROK_AUTH_TOKEN = "${{ secrets.NGROK_AUTH_TOKEN }}"
        .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN

        # Enable Remote Desktop
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

        # Create or update runneradmin user
        if (Get-LocalUser -Name "runneradmin" -ErrorAction SilentlyContinue) {
            Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        } else {
            New-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force) -UserMayNotChangePassword -PasswordNeverExpires -AccountNeverExpires
            Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"
        }

        # Download and install WinRAR
        Invoke-WebRequest -Uri "https://www.win-rar.com/fileadmin/winrar-versions/winrar/winrar-x64-601.exe" -OutFile winrar-x64-601.exe
        Start-Process -FilePath .\winrar-x64-601.exe -ArgumentList "/S" -Wait
        Write-Output "WinRAR installation completed."

        # Download Avica
        Invoke-WebRequest -Uri "https://download.avica.link/downloader/Avica_setup.exe" -OutFile "C:\Users\runneradmin\Downloads\Avica_setup.exe"
        Write-Output "Avica downloaded to C:\Users\runneradmin\Downloads."
        
        # Download IDM
        Invoke-WebRequest -Uri "https://mirror2.internetdownloadmanager.com/idman642build10.exe?v=lt&filename=idman642build10.exe" -OutFile "C:\Users\runneradmin\Downloads\idman642build10.exe"
        Write-Output "IDM downloaded to C:\Users\runneradmin\Downloads."
        
        # Open File Explorer in Downloads
        Start-Process -FilePath explorer.exe -ArgumentList "C:\Users\runneradmin\Downloads"
                
        # Create ngrok tunnel to remote desktop
        Start-Process .\ngrok.exe -ArgumentList "tcp 3389" -NoNewWindow
        Start-Sleep -Seconds 10
        while ($true) {
          try {
            $tunnels = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
            if ($tunnels.tunnels) {
              $ngrokUrl = $tunnels.tunnels[0].public_url
              Write-Output "ngrok tunnel is available at: $ngrokUrl"
              break
            }
          } catch {
            Write-Output "Waiting for ngrok to initialize..."
            Start-Sleep -Seconds 5
          }
        }

        # Keep the script running
        while ($true) {
          Start-Sleep -Seconds 300
        }

      shell: pwsh
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
